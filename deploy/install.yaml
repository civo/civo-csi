---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: civo-csi-controller-sa
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: civo-csi-provisioner-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "csinodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: civo-csi-provisioner-binding
subjects:
  - kind: ServiceAccount
    name: civo-csi-controller-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: civo-csi-provisioner-role
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: civo-csi-attacher-role
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: civo-csi-attacher-binding
subjects:
  - kind: ServiceAccount
    name: civo-csi-controller-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: civo-csi-attacher-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: civo-csi-node-sa
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: civo-csi-node-driver-registrar-role
  namespace: kube-system
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: civo-csi-node-driver-registrar-binding
subjects:
  - kind: ServiceAccount
    name: civo-csi-node-sa
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: civo-csi-node-driver-registrar-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.civo.com
spec:
  podInfoOnMount: true
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: civo-volume
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: csi.civo.com
allowVolumeExpansion: false
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: civo-csi-controller
  namespace: kube-system
spec:
  serviceName: "civo-csi"
  selector:
    matchLabels:
      app: civo-csi-controller
  replicas: 1
  template:
    metadata:
      labels:
        app: civo-csi-controller
        role: civo-csi
    spec:
      priorityClassName: system-cluster-critical
      tolerations:
      - key: node.kubernetes.io/disk-pressure
        operator: Exists
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 30
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 30
      serviceAccount: civo-csi-controller-sa
      containers:
        - name: csi-provisioner
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
          args:
            - "--csi-address=$(ADDRESS)"
            - "--default-fstype=ext4"
            - "--timeout=30s"
            - "--v=5"
          env:
            - name: ADDRESS
              value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/kubelet/plugins/csi.civo.com
        - name: csi-attacher
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=30s"
            - "--v=5"
          env:
            - name: ADDRESS
              value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/kubelet/plugins/csi.civo.com
        - name: civo-csi-plugin
          image: civo/csi:latest
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/kubelet/plugins/csi.civo.com/csi.sock
            - name: CIVO_API_KEY
              valueFrom:
                secretKeyRef:
                  name: civo-api-access
                  key: api-key
            - name: CIVO_REGION
              valueFrom:
                secretKeyRef:
                  name: civo-api-access
                  key: region
            - name: CIVO_NAMESPACE
              valueFrom:
                secretKeyRef:
                  name: civo-api-access
                  key: namespace
            - name: CIVO_CLUSTER_ID
              valueFrom:
                secretKeyRef:
                  name: civo-api-access
                  key: cluster-id
            - name: CIVO_API_URL
              valueFrom:
                secretKeyRef:
                  name: civo-api-access
                  key: api-url
          imagePullPolicy: "Always"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/kubelet/plugins/csi.civo.com
      volumes:
        - name: socket-dir
          emptyDir: {}
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: civo-csi-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: civo-csi-node
  template:
    metadata:
      labels:
        app: civo-csi-node
        role: civo-csi
    spec:
      priorityClassName: system-node-critical
      serviceAccount: civo-csi-node-sa
      hostNetwork: true
      tolerations:
      - key: node.kubernetes.io/disk-pressure
        operator: Exists
      - key: node.kubernetes.io/memory-pressure
        operator: Exists
      - key: node.kubernetes.io/network-unavailable
        operator: Exists
      - key: node.kubernetes.io/not-ready
        operator: Exists
      - key: node.kubernetes.io/pid-pressure
        operator: Exists
      - key: node.kubernetes.io/unreachable
        operator: Exists
      - key: node.kubernetes.io/unschedulable
        operator: Exists
      containers:
        - name: csi-node-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.5.1
          args:
            - "--v=5"
            - "--timeout=30s"
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/csi.civo.com/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi/
            - name: registration-dir
              mountPath: /registration/
        - name: civo-csi-plugin
          image: civo/csi:latest
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
          imagePullPolicy: "Always"
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: etc-dir
              mountPath: /etc
              readOnly: true
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: device-dir
              mountPath: /dev
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.civo.com
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: etc-dir
          hostPath:
            path: /etc
        - name: device-dir
          hostPath:
            path: /dev
        - name: udev-rules-dir
          hostPath:
            path: /etc/udev/rules.d/
